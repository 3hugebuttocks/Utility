apply plugin: 'com.android.application'

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools
    defaultConfig {
        applicationId "com.example.utility"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            //移除无用的资源文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "api", "mode"

    //构建不同产品
    productFlavors {
        demo {
            dimension "mode"
            applicationId "com.utility.demo"
            applicationIdSuffix ".demo"
            versionNameSuffix "-demo"
            buildConfigField 'String', 'v_name', "\"Demo Version\""
        }

        full {
            dimension "mode"
            applicationId "com.utility.full"
            applicationIdSuffix ".full"
            versionNameSuffix "-full"
            buildConfigField 'String', 'v_name', "\"Full Version\""
        }

        minApi18 {
            dimension "api"
            minSdkVersion '18'
            versionCode 3000 + android.defaultConfig.versionCode
            versionNameSuffix "-minApi18"
        }
        minApi16 {
            dimension "api"
            minSdkVersion '16'
            versionCode 10000 + android.defaultConfig.versionCode
            versionNameSuffix "-minApi18"
        }
    }
    7
    //过滤变体
    variantFilter { variant ->
        def names = variant.flavors*.name
        if (names.contains("minApi16")) {
            setIgnore(true)
        }
    }

    dataBinding {
        enabled = true
    }
}

//解决support包重复依赖
configurations {
    all*.exclude group: 'com.android.support', module: 'support-v4'
}
/*configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '27.0.0'
            }
        }
    }
}*/


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation supportDependencies.support.appCompat
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation supportDependencies.rx.core
    implementation supportDependencies.okhttp.core
    implementation supportDependencies.retrofit.core
    implementation supportDependencies.timber
    implementation supportDependencies.butterKnife.runtime
    implementation project(':common')
    annotationProcessor supportDependencies.butterKnife.compiler
    implementation supportDependencies.support.recyclerView
    implementation supportDependencies.glide.runtime
    annotationProcessor supportDependencies.glide.compiler
    implementation supportDependencies.gson
    implementation supportDependencies.rx.android
    implementation supportDependencies.retrofit.gson
    implementation supportDependencies.retrofit.rxjava2
}

